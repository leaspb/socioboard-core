//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Socioboard.Api.User {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserSoap", Namespace="http://tempuri.org/")]
    public partial class User : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordWithoutOldPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProfilesConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUsertoactivateOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserAccountInfoByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCountByAccTypeMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaidUserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnPaidUserCountByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateForgetPasswordKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdminUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResetEmailKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIsEmailKeyUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIsKeyUsedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaymentandEwalletStatusByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmailIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEwalletAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllExpiredUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoForSocialLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterbyTwitterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompareDateWithclientlocalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DifferenceBetweenServerandLocalTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DifferenceBetweenServerandUtcOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLastLoginTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InactiveUserOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public User() {
            this.Url = global::Socioboard.Properties.Settings.Default.Socioboard_Api_User_User;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ChangePasswordWithoutOldPasswordCompletedEventHandler ChangePasswordWithoutOldPasswordCompleted;
        
        /// <remarks/>
        public event ProfilesConnectedCompletedEventHandler ProfilesConnectedCompleted;
        
        /// <remarks/>
        public event getUsersByIdCompletedEventHandler getUsersByIdCompleted;
        
        /// <remarks/>
        public event getUserInfoByEmailCompletedEventHandler getUserInfoByEmailCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event UpdateUsertoactivateCompletedEventHandler UpdateUsertoactivateCompleted;
        
        /// <remarks/>
        public event changePaymentStatusCompletedEventHandler changePaymentStatusCompleted;
        
        /// <remarks/>
        public event UpdateUserAccountInfoByUserIdCompletedEventHandler UpdateUserAccountInfoByUserIdCompleted;
        
        /// <remarks/>
        public event UserCountByMonthCompletedEventHandler UserCountByMonthCompleted;
        
        /// <remarks/>
        public event UserCountByAccTypeMonthCompletedEventHandler UserCountByAccTypeMonthCompleted;
        
        /// <remarks/>
        public event PaidUserCountByMonthCompletedEventHandler PaidUserCountByMonthCompleted;
        
        /// <remarks/>
        public event UnPaidUserCountByMonthCompletedEventHandler UnPaidUserCountByMonthCompleted;
        
        /// <remarks/>
        public event UpdateForgetPasswordKeyCompletedEventHandler UpdateForgetPasswordKeyCompleted;
        
        /// <remarks/>
        public event UpdateAdminUserCompletedEventHandler UpdateAdminUserCompleted;
        
        /// <remarks/>
        public event CheckEmailIdCompletedEventHandler CheckEmailIdCompleted;
        
        /// <remarks/>
        public event UpdateResetEmailKeyCompletedEventHandler UpdateResetEmailKeyCompleted;
        
        /// <remarks/>
        public event UpdateIsEmailKeyUsedCompletedEventHandler UpdateIsEmailKeyUsedCompleted;
        
        /// <remarks/>
        public event UpdateIsKeyUsedCompletedEventHandler UpdateIsKeyUsedCompleted;
        
        /// <remarks/>
        public event UpdatePaymentandEwalletStatusByUserIdCompletedEventHandler UpdatePaymentandEwalletStatusByUserIdCompleted;
        
        /// <remarks/>
        public event UpdateEmailIdCompletedEventHandler UpdateEmailIdCompleted;
        
        /// <remarks/>
        public event UpdateEwalletAmountCompletedEventHandler UpdateEwalletAmountCompleted;
        
        /// <remarks/>
        public event GetUserInfoByCodeCompletedEventHandler GetUserInfoByCodeCompleted;
        
        /// <remarks/>
        public event GetAllExpiredUserCompletedEventHandler GetAllExpiredUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event getUserInfoForSocialLoginCompletedEventHandler getUserInfoForSocialLoginCompleted;
        
        /// <remarks/>
        public event RegisterbyTwitterCompletedEventHandler RegisterbyTwitterCompleted;
        
        /// <remarks/>
        public event CompareDateWithclientlocalCompletedEventHandler CompareDateWithclientlocalCompleted;
        
        /// <remarks/>
        public event DifferenceBetweenServerandLocalTimeCompletedEventHandler DifferenceBetweenServerandLocalTimeCompleted;
        
        /// <remarks/>
        public event DifferenceBetweenServerandUtcCompletedEventHandler DifferenceBetweenServerandUtcCompleted;
        
        /// <remarks/>
        public event UpdateLastLoginTimeCompletedEventHandler UpdateLastLoginTimeCompleted;
        
        /// <remarks/>
        public event InactiveUserCompletedEventHandler InactiveUserCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string EmailId, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        EmailId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string EmailId, string Password) {
            this.LoginAsync(EmailId, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string EmailId, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        EmailId,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pass Username", RequestElementName="Pass Username", RequestNamespace="http://tempuri.org/", ResponseElementName="Pass UsernameResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Pass UsernameResult")]
        public string Register(string EmailId, string Password, string AccountType, string Username, string ActivationStatus) {
            object[] results = this.Invoke("Register", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        ActivationStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string EmailId, string Password, string AccountType, string Username, string ActivationStatus) {
            this.RegisterAsync(EmailId, Password, AccountType, Username, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string EmailId, string Password, string AccountType, string Username, string ActivationStatus, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        ActivationStatus}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser(string UserId, string fname, string lname, string timezone, string picurl, string access_token) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone,
                        picurl,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserId, string fname, string lname, string timezone, string picurl, string access_token) {
            this.UpdateUserAsync(UserId, fname, lname, timezone, picurl, access_token, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string UserId, string fname, string lname, string timezone, string picurl, string access_token, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone,
                        picurl,
                        access_token}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string EmailId, string Password, string NewPassword, string access_token) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string EmailId, string Password, string NewPassword, string access_token) {
            this.ChangePasswordAsync(EmailId, Password, NewPassword, access_token, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string EmailId, string Password, string NewPassword, string access_token, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword,
                        access_token}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePasswordWithoutOldPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePasswordWithoutOldPassword(string EmailId, string Password, string NewPassword) {
            object[] results = this.Invoke("ChangePasswordWithoutOldPassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordWithoutOldPasswordAsync(string EmailId, string Password, string NewPassword) {
            this.ChangePasswordWithoutOldPasswordAsync(EmailId, Password, NewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordWithoutOldPasswordAsync(string EmailId, string Password, string NewPassword, object userState) {
            if ((this.ChangePasswordWithoutOldPasswordOperationCompleted == null)) {
                this.ChangePasswordWithoutOldPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordWithoutOldPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePasswordWithoutOldPassword", new object[] {
                        EmailId,
                        Password,
                        NewPassword}, this.ChangePasswordWithoutOldPasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordWithoutOldPasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordWithoutOldPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordWithoutOldPasswordCompleted(this, new ChangePasswordWithoutOldPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProfilesConnected", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProfilesConnected(string UserId, string access_token) {
            object[] results = this.Invoke("ProfilesConnected", new object[] {
                        UserId,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProfilesConnectedAsync(string UserId, string access_token) {
            this.ProfilesConnectedAsync(UserId, access_token, null);
        }
        
        /// <remarks/>
        public void ProfilesConnectedAsync(string UserId, string access_token, object userState) {
            if ((this.ProfilesConnectedOperationCompleted == null)) {
                this.ProfilesConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProfilesConnectedOperationCompleted);
            }
            this.InvokeAsync("ProfilesConnected", new object[] {
                        UserId,
                        access_token}, this.ProfilesConnectedOperationCompleted, userState);
        }
        
        private void OnProfilesConnectedOperationCompleted(object arg) {
            if ((this.ProfilesConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProfilesConnectedCompleted(this, new ProfilesConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUsersById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUsersById(string UserId, string access_token) {
            object[] results = this.Invoke("getUsersById", new object[] {
                        UserId,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsersByIdAsync(string UserId, string access_token) {
            this.getUsersByIdAsync(UserId, access_token, null);
        }
        
        /// <remarks/>
        public void getUsersByIdAsync(string UserId, string access_token, object userState) {
            if ((this.getUsersByIdOperationCompleted == null)) {
                this.getUsersByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersByIdOperationCompleted);
            }
            this.InvokeAsync("getUsersById", new object[] {
                        UserId,
                        access_token}, this.getUsersByIdOperationCompleted, userState);
        }
        
        private void OngetUsersByIdOperationCompleted(object arg) {
            if ((this.getUsersByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersByIdCompleted(this, new getUsersByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfoByEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfoByEmail(string userEmail) {
            object[] results = this.Invoke("getUserInfoByEmail", new object[] {
                        userEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoByEmailAsync(string userEmail) {
            this.getUserInfoByEmailAsync(userEmail, null);
        }
        
        /// <remarks/>
        public void getUserInfoByEmailAsync(string userEmail, object userState) {
            if ((this.getUserInfoByEmailOperationCompleted == null)) {
                this.getUserInfoByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoByEmailOperationCompleted);
            }
            this.InvokeAsync("getUserInfoByEmail", new object[] {
                        userEmail}, this.getUserInfoByEmailOperationCompleted, userState);
        }
        
        private void OngetUserInfoByEmailOperationCompleted(object arg) {
            if ((this.getUserInfoByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoByEmailCompleted(this, new getUserInfoByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetPassword(System.Guid id, string password) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        id,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid id, string password) {
            this.ResetPasswordAsync(id, password, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid id, string password, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        id,
                        password}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUsertoactivate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUsertoactivate(string UserId, string ActivationStatus) {
            object[] results = this.Invoke("UpdateUsertoactivate", new object[] {
                        UserId,
                        ActivationStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUsertoactivateAsync(string UserId, string ActivationStatus) {
            this.UpdateUsertoactivateAsync(UserId, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void UpdateUsertoactivateAsync(string UserId, string ActivationStatus, object userState) {
            if ((this.UpdateUsertoactivateOperationCompleted == null)) {
                this.UpdateUsertoactivateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUsertoactivateOperationCompleted);
            }
            this.InvokeAsync("UpdateUsertoactivate", new object[] {
                        UserId,
                        ActivationStatus}, this.UpdateUsertoactivateOperationCompleted, userState);
        }
        
        private void OnUpdateUsertoactivateOperationCompleted(object arg) {
            if ((this.UpdateUsertoactivateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUsertoactivateCompleted(this, new UpdateUsertoactivateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/changePaymentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string changePaymentStatus(string UserId, string ActivationStatus, string access_token) {
            object[] results = this.Invoke("changePaymentStatus", new object[] {
                        UserId,
                        ActivationStatus,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePaymentStatusAsync(string UserId, string ActivationStatus, string access_token) {
            this.changePaymentStatusAsync(UserId, ActivationStatus, access_token, null);
        }
        
        /// <remarks/>
        public void changePaymentStatusAsync(string UserId, string ActivationStatus, string access_token, object userState) {
            if ((this.changePaymentStatusOperationCompleted == null)) {
                this.changePaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePaymentStatusOperationCompleted);
            }
            this.InvokeAsync("changePaymentStatus", new object[] {
                        UserId,
                        ActivationStatus,
                        access_token}, this.changePaymentStatusOperationCompleted, userState);
        }
        
        private void OnchangePaymentStatusOperationCompleted(object arg) {
            if ((this.changePaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePaymentStatusCompleted(this, new changePaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserAccountInfoByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserAccountInfoByUserId(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus, string access_token) {
            object[] results = this.Invoke("UpdateUserAccountInfoByUserId", new object[] {
                        userid,
                        AccountType,
                        ExpiryDate,
                        PaymentStatus,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAccountInfoByUserIdAsync(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus, string access_token) {
            this.UpdateUserAccountInfoByUserIdAsync(userid, AccountType, ExpiryDate, PaymentStatus, access_token, null);
        }
        
        /// <remarks/>
        public void UpdateUserAccountInfoByUserIdAsync(string userid, string AccountType, System.DateTime ExpiryDate, string PaymentStatus, string access_token, object userState) {
            if ((this.UpdateUserAccountInfoByUserIdOperationCompleted == null)) {
                this.UpdateUserAccountInfoByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserAccountInfoByUserIdOperationCompleted);
            }
            this.InvokeAsync("UpdateUserAccountInfoByUserId", new object[] {
                        userid,
                        AccountType,
                        ExpiryDate,
                        PaymentStatus,
                        access_token}, this.UpdateUserAccountInfoByUserIdOperationCompleted, userState);
        }
        
        private void OnUpdateUserAccountInfoByUserIdOperationCompleted(object arg) {
            if ((this.UpdateUserAccountInfoByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserAccountInfoByUserIdCompleted(this, new UpdateUserAccountInfoByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserCountByMonth() {
            object[] results = this.Invoke("UserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserCountByMonthAsync() {
            this.UserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void UserCountByMonthAsync(object userState) {
            if ((this.UserCountByMonthOperationCompleted == null)) {
                this.UserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("UserCountByMonth", new object[0], this.UserCountByMonthOperationCompleted, userState);
        }
        
        private void OnUserCountByMonthOperationCompleted(object arg) {
            if ((this.UserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCountByMonthCompleted(this, new UserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserCountByAccTypeMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserCountByAccTypeMonth() {
            object[] results = this.Invoke("UserCountByAccTypeMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserCountByAccTypeMonthAsync() {
            this.UserCountByAccTypeMonthAsync(null);
        }
        
        /// <remarks/>
        public void UserCountByAccTypeMonthAsync(object userState) {
            if ((this.UserCountByAccTypeMonthOperationCompleted == null)) {
                this.UserCountByAccTypeMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCountByAccTypeMonthOperationCompleted);
            }
            this.InvokeAsync("UserCountByAccTypeMonth", new object[0], this.UserCountByAccTypeMonthOperationCompleted, userState);
        }
        
        private void OnUserCountByAccTypeMonthOperationCompleted(object arg) {
            if ((this.UserCountByAccTypeMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCountByAccTypeMonthCompleted(this, new UserCountByAccTypeMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PaidUserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PaidUserCountByMonth() {
            object[] results = this.Invoke("PaidUserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PaidUserCountByMonthAsync() {
            this.PaidUserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void PaidUserCountByMonthAsync(object userState) {
            if ((this.PaidUserCountByMonthOperationCompleted == null)) {
                this.PaidUserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaidUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("PaidUserCountByMonth", new object[0], this.PaidUserCountByMonthOperationCompleted, userState);
        }
        
        private void OnPaidUserCountByMonthOperationCompleted(object arg) {
            if ((this.PaidUserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaidUserCountByMonthCompleted(this, new PaidUserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnPaidUserCountByMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnPaidUserCountByMonth() {
            object[] results = this.Invoke("UnPaidUserCountByMonth", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnPaidUserCountByMonthAsync() {
            this.UnPaidUserCountByMonthAsync(null);
        }
        
        /// <remarks/>
        public void UnPaidUserCountByMonthAsync(object userState) {
            if ((this.UnPaidUserCountByMonthOperationCompleted == null)) {
                this.UnPaidUserCountByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnPaidUserCountByMonthOperationCompleted);
            }
            this.InvokeAsync("UnPaidUserCountByMonth", new object[0], this.UnPaidUserCountByMonthOperationCompleted, userState);
        }
        
        private void OnUnPaidUserCountByMonthOperationCompleted(object arg) {
            if ((this.UnPaidUserCountByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnPaidUserCountByMonthCompleted(this, new UnPaidUserCountByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateForgetPasswordKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateForgetPasswordKey(string userID, string ForgetPasswordKey) {
            object[] results = this.Invoke("UpdateForgetPasswordKey", new object[] {
                        userID,
                        ForgetPasswordKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateForgetPasswordKeyAsync(string userID, string ForgetPasswordKey) {
            this.UpdateForgetPasswordKeyAsync(userID, ForgetPasswordKey, null);
        }
        
        /// <remarks/>
        public void UpdateForgetPasswordKeyAsync(string userID, string ForgetPasswordKey, object userState) {
            if ((this.UpdateForgetPasswordKeyOperationCompleted == null)) {
                this.UpdateForgetPasswordKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateForgetPasswordKeyOperationCompleted);
            }
            this.InvokeAsync("UpdateForgetPasswordKey", new object[] {
                        userID,
                        ForgetPasswordKey}, this.UpdateForgetPasswordKeyOperationCompleted, userState);
        }
        
        private void OnUpdateForgetPasswordKeyOperationCompleted(object arg) {
            if ((this.UpdateForgetPasswordKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateForgetPasswordKeyCompleted(this, new UpdateForgetPasswordKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAdminUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAdminUser(string UserId, string fname, string lname, string timezone, string profileurl) {
            object[] results = this.Invoke("UpdateAdminUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone,
                        profileurl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAdminUserAsync(string UserId, string fname, string lname, string timezone, string profileurl) {
            this.UpdateAdminUserAsync(UserId, fname, lname, timezone, profileurl, null);
        }
        
        /// <remarks/>
        public void UpdateAdminUserAsync(string UserId, string fname, string lname, string timezone, string profileurl, object userState) {
            if ((this.UpdateAdminUserOperationCompleted == null)) {
                this.UpdateAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdminUserOperationCompleted);
            }
            this.InvokeAsync("UpdateAdminUser", new object[] {
                        UserId,
                        fname,
                        lname,
                        timezone,
                        profileurl}, this.UpdateAdminUserOperationCompleted, userState);
        }
        
        private void OnUpdateAdminUserOperationCompleted(object arg) {
            if ((this.UpdateAdminUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdminUserCompleted(this, new UpdateAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmailId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckEmailId(string NewEmailId) {
            object[] results = this.Invoke("CheckEmailId", new object[] {
                        NewEmailId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailIdAsync(string NewEmailId) {
            this.CheckEmailIdAsync(NewEmailId, null);
        }
        
        /// <remarks/>
        public void CheckEmailIdAsync(string NewEmailId, object userState) {
            if ((this.CheckEmailIdOperationCompleted == null)) {
                this.CheckEmailIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailIdOperationCompleted);
            }
            this.InvokeAsync("CheckEmailId", new object[] {
                        NewEmailId}, this.CheckEmailIdOperationCompleted, userState);
        }
        
        private void OnCheckEmailIdOperationCompleted(object arg) {
            if ((this.CheckEmailIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailIdCompleted(this, new CheckEmailIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateResetEmailKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateResetEmailKey(string userID, string ChangeEmailKey) {
            object[] results = this.Invoke("UpdateResetEmailKey", new object[] {
                        userID,
                        ChangeEmailKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateResetEmailKeyAsync(string userID, string ChangeEmailKey) {
            this.UpdateResetEmailKeyAsync(userID, ChangeEmailKey, null);
        }
        
        /// <remarks/>
        public void UpdateResetEmailKeyAsync(string userID, string ChangeEmailKey, object userState) {
            if ((this.UpdateResetEmailKeyOperationCompleted == null)) {
                this.UpdateResetEmailKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResetEmailKeyOperationCompleted);
            }
            this.InvokeAsync("UpdateResetEmailKey", new object[] {
                        userID,
                        ChangeEmailKey}, this.UpdateResetEmailKeyOperationCompleted, userState);
        }
        
        private void OnUpdateResetEmailKeyOperationCompleted(object arg) {
            if ((this.UpdateResetEmailKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResetEmailKeyCompleted(this, new UpdateResetEmailKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIsEmailKeyUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateIsEmailKeyUsed(string userID, string ChangeEmailKey) {
            object[] results = this.Invoke("UpdateIsEmailKeyUsed", new object[] {
                        userID,
                        ChangeEmailKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIsEmailKeyUsedAsync(string userID, string ChangeEmailKey) {
            this.UpdateIsEmailKeyUsedAsync(userID, ChangeEmailKey, null);
        }
        
        /// <remarks/>
        public void UpdateIsEmailKeyUsedAsync(string userID, string ChangeEmailKey, object userState) {
            if ((this.UpdateIsEmailKeyUsedOperationCompleted == null)) {
                this.UpdateIsEmailKeyUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIsEmailKeyUsedOperationCompleted);
            }
            this.InvokeAsync("UpdateIsEmailKeyUsed", new object[] {
                        userID,
                        ChangeEmailKey}, this.UpdateIsEmailKeyUsedOperationCompleted, userState);
        }
        
        private void OnUpdateIsEmailKeyUsedOperationCompleted(object arg) {
            if ((this.UpdateIsEmailKeyUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIsEmailKeyUsedCompleted(this, new UpdateIsEmailKeyUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIsKeyUsed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateIsKeyUsed(string userID) {
            object[] results = this.Invoke("UpdateIsKeyUsed", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIsKeyUsedAsync(string userID) {
            this.UpdateIsKeyUsedAsync(userID, null);
        }
        
        /// <remarks/>
        public void UpdateIsKeyUsedAsync(string userID, object userState) {
            if ((this.UpdateIsKeyUsedOperationCompleted == null)) {
                this.UpdateIsKeyUsedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIsKeyUsedOperationCompleted);
            }
            this.InvokeAsync("UpdateIsKeyUsed", new object[] {
                        userID}, this.UpdateIsKeyUsedOperationCompleted, userState);
        }
        
        private void OnUpdateIsKeyUsedOperationCompleted(object arg) {
            if ((this.UpdateIsKeyUsedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIsKeyUsedCompleted(this, new UpdateIsKeyUsedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePaymentandEwalletStatusByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePaymentandEwalletStatusByUserId(string userid, string ewallet, string accounttype, string paymentstatus, string access_token) {
            object[] results = this.Invoke("UpdatePaymentandEwalletStatusByUserId", new object[] {
                        userid,
                        ewallet,
                        accounttype,
                        paymentstatus,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaymentandEwalletStatusByUserIdAsync(string userid, string ewallet, string accounttype, string paymentstatus, string access_token) {
            this.UpdatePaymentandEwalletStatusByUserIdAsync(userid, ewallet, accounttype, paymentstatus, access_token, null);
        }
        
        /// <remarks/>
        public void UpdatePaymentandEwalletStatusByUserIdAsync(string userid, string ewallet, string accounttype, string paymentstatus, string access_token, object userState) {
            if ((this.UpdatePaymentandEwalletStatusByUserIdOperationCompleted == null)) {
                this.UpdatePaymentandEwalletStatusByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaymentandEwalletStatusByUserIdOperationCompleted);
            }
            this.InvokeAsync("UpdatePaymentandEwalletStatusByUserId", new object[] {
                        userid,
                        ewallet,
                        accounttype,
                        paymentstatus,
                        access_token}, this.UpdatePaymentandEwalletStatusByUserIdOperationCompleted, userState);
        }
        
        private void OnUpdatePaymentandEwalletStatusByUserIdOperationCompleted(object arg) {
            if ((this.UpdatePaymentandEwalletStatusByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaymentandEwalletStatusByUserIdCompleted(this, new UpdatePaymentandEwalletStatusByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmailId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmailId(string Id, string GroupId, string NewEmailId, string access_token) {
            object[] results = this.Invoke("UpdateEmailId", new object[] {
                        Id,
                        GroupId,
                        NewEmailId,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmailIdAsync(string Id, string GroupId, string NewEmailId, string access_token) {
            this.UpdateEmailIdAsync(Id, GroupId, NewEmailId, access_token, null);
        }
        
        /// <remarks/>
        public void UpdateEmailIdAsync(string Id, string GroupId, string NewEmailId, string access_token, object userState) {
            if ((this.UpdateEmailIdOperationCompleted == null)) {
                this.UpdateEmailIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmailIdOperationCompleted);
            }
            this.InvokeAsync("UpdateEmailId", new object[] {
                        Id,
                        GroupId,
                        NewEmailId,
                        access_token}, this.UpdateEmailIdOperationCompleted, userState);
        }
        
        private void OnUpdateEmailIdOperationCompleted(object arg) {
            if ((this.UpdateEmailIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmailIdCompleted(this, new UpdateEmailIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEwalletAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEwalletAmount(string UserId, string updatedamount, string access_token) {
            object[] results = this.Invoke("UpdateEwalletAmount", new object[] {
                        UserId,
                        updatedamount,
                        access_token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEwalletAmountAsync(string UserId, string updatedamount, string access_token) {
            this.UpdateEwalletAmountAsync(UserId, updatedamount, access_token, null);
        }
        
        /// <remarks/>
        public void UpdateEwalletAmountAsync(string UserId, string updatedamount, string access_token, object userState) {
            if ((this.UpdateEwalletAmountOperationCompleted == null)) {
                this.UpdateEwalletAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEwalletAmountOperationCompleted);
            }
            this.InvokeAsync("UpdateEwalletAmount", new object[] {
                        UserId,
                        updatedamount,
                        access_token}, this.UpdateEwalletAmountOperationCompleted, userState);
        }
        
        private void OnUpdateEwalletAmountOperationCompleted(object arg) {
            if ((this.UpdateEwalletAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEwalletAmountCompleted(this, new UpdateEwalletAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByCode(string code) {
            object[] results = this.Invoke("GetUserInfoByCode", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByCodeAsync(string code) {
            this.GetUserInfoByCodeAsync(code, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByCodeAsync(string code, object userState) {
            if ((this.GetUserInfoByCodeOperationCompleted == null)) {
                this.GetUserInfoByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByCodeOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByCode", new object[] {
                        code}, this.GetUserInfoByCodeOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByCodeOperationCompleted(object arg) {
            if ((this.GetUserInfoByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByCodeCompleted(this, new GetUserInfoByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllExpiredUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllExpiredUser() {
            object[] results = this.Invoke("GetAllExpiredUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllExpiredUserAsync() {
            this.GetAllExpiredUserAsync(null);
        }
        
        /// <remarks/>
        public void GetAllExpiredUserAsync(object userState) {
            if ((this.GetAllExpiredUserOperationCompleted == null)) {
                this.GetAllExpiredUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllExpiredUserOperationCompleted);
            }
            this.InvokeAsync("GetAllExpiredUser", new object[0], this.GetAllExpiredUserOperationCompleted, userState);
        }
        
        private void OnGetAllExpiredUserOperationCompleted(object arg) {
            if ((this.GetAllExpiredUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllExpiredUserCompleted(this, new GetAllExpiredUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUsers() {
            object[] results = this.Invoke("GetAllUsers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserInfoForSocialLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserInfoForSocialLogin(string logintype) {
            object[] results = this.Invoke("getUserInfoForSocialLogin", new object[] {
                        logintype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoForSocialLoginAsync(string logintype) {
            this.getUserInfoForSocialLoginAsync(logintype, null);
        }
        
        /// <remarks/>
        public void getUserInfoForSocialLoginAsync(string logintype, object userState) {
            if ((this.getUserInfoForSocialLoginOperationCompleted == null)) {
                this.getUserInfoForSocialLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoForSocialLoginOperationCompleted);
            }
            this.InvokeAsync("getUserInfoForSocialLogin", new object[] {
                        logintype}, this.getUserInfoForSocialLoginOperationCompleted, userState);
        }
        
        private void OngetUserInfoForSocialLoginOperationCompleted(object arg) {
            if ((this.getUserInfoForSocialLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoForSocialLoginCompleted(this, new getUserInfoForSocialLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterbyTwitter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterbyTwitter(string EmailId, string Password, string AccountType, string Username, string SocioLogin, string PictureUrl, string ActivationStatus) {
            object[] results = this.Invoke("RegisterbyTwitter", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        SocioLogin,
                        PictureUrl,
                        ActivationStatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterbyTwitterAsync(string EmailId, string Password, string AccountType, string Username, string SocioLogin, string PictureUrl, string ActivationStatus) {
            this.RegisterbyTwitterAsync(EmailId, Password, AccountType, Username, SocioLogin, PictureUrl, ActivationStatus, null);
        }
        
        /// <remarks/>
        public void RegisterbyTwitterAsync(string EmailId, string Password, string AccountType, string Username, string SocioLogin, string PictureUrl, string ActivationStatus, object userState) {
            if ((this.RegisterbyTwitterOperationCompleted == null)) {
                this.RegisterbyTwitterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterbyTwitterOperationCompleted);
            }
            this.InvokeAsync("RegisterbyTwitter", new object[] {
                        EmailId,
                        Password,
                        AccountType,
                        Username,
                        SocioLogin,
                        PictureUrl,
                        ActivationStatus}, this.RegisterbyTwitterOperationCompleted, userState);
        }
        
        private void OnRegisterbyTwitterOperationCompleted(object arg) {
            if ((this.RegisterbyTwitterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterbyTwitterCompleted(this, new RegisterbyTwitterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompareDateWithclientlocal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CompareDateWithclientlocal(string clientdate, string datetime) {
            object[] results = this.Invoke("CompareDateWithclientlocal", new object[] {
                        clientdate,
                        datetime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompareDateWithclientlocalAsync(string clientdate, string datetime) {
            this.CompareDateWithclientlocalAsync(clientdate, datetime, null);
        }
        
        /// <remarks/>
        public void CompareDateWithclientlocalAsync(string clientdate, string datetime, object userState) {
            if ((this.CompareDateWithclientlocalOperationCompleted == null)) {
                this.CompareDateWithclientlocalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompareDateWithclientlocalOperationCompleted);
            }
            this.InvokeAsync("CompareDateWithclientlocal", new object[] {
                        clientdate,
                        datetime}, this.CompareDateWithclientlocalOperationCompleted, userState);
        }
        
        private void OnCompareDateWithclientlocalOperationCompleted(object arg) {
            if ((this.CompareDateWithclientlocalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompareDateWithclientlocalCompleted(this, new CompareDateWithclientlocalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DifferenceBetweenServerandLocalTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DifferenceBetweenServerandLocalTime(string clientdate) {
            object[] results = this.Invoke("DifferenceBetweenServerandLocalTime", new object[] {
                        clientdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DifferenceBetweenServerandLocalTimeAsync(string clientdate) {
            this.DifferenceBetweenServerandLocalTimeAsync(clientdate, null);
        }
        
        /// <remarks/>
        public void DifferenceBetweenServerandLocalTimeAsync(string clientdate, object userState) {
            if ((this.DifferenceBetweenServerandLocalTimeOperationCompleted == null)) {
                this.DifferenceBetweenServerandLocalTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDifferenceBetweenServerandLocalTimeOperationCompleted);
            }
            this.InvokeAsync("DifferenceBetweenServerandLocalTime", new object[] {
                        clientdate}, this.DifferenceBetweenServerandLocalTimeOperationCompleted, userState);
        }
        
        private void OnDifferenceBetweenServerandLocalTimeOperationCompleted(object arg) {
            if ((this.DifferenceBetweenServerandLocalTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DifferenceBetweenServerandLocalTimeCompleted(this, new DifferenceBetweenServerandLocalTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DifferenceBetweenServerandUtc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DifferenceBetweenServerandUtc() {
            object[] results = this.Invoke("DifferenceBetweenServerandUtc", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DifferenceBetweenServerandUtcAsync() {
            this.DifferenceBetweenServerandUtcAsync(null);
        }
        
        /// <remarks/>
        public void DifferenceBetweenServerandUtcAsync(object userState) {
            if ((this.DifferenceBetweenServerandUtcOperationCompleted == null)) {
                this.DifferenceBetweenServerandUtcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDifferenceBetweenServerandUtcOperationCompleted);
            }
            this.InvokeAsync("DifferenceBetweenServerandUtc", new object[0], this.DifferenceBetweenServerandUtcOperationCompleted, userState);
        }
        
        private void OnDifferenceBetweenServerandUtcOperationCompleted(object arg) {
            if ((this.DifferenceBetweenServerandUtcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DifferenceBetweenServerandUtcCompleted(this, new DifferenceBetweenServerandUtcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLastLoginTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLastLoginTime(string UserId) {
            object[] results = this.Invoke("UpdateLastLoginTime", new object[] {
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLastLoginTimeAsync(string UserId) {
            this.UpdateLastLoginTimeAsync(UserId, null);
        }
        
        /// <remarks/>
        public void UpdateLastLoginTimeAsync(string UserId, object userState) {
            if ((this.UpdateLastLoginTimeOperationCompleted == null)) {
                this.UpdateLastLoginTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLastLoginTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateLastLoginTime", new object[] {
                        UserId}, this.UpdateLastLoginTimeOperationCompleted, userState);
        }
        
        private void OnUpdateLastLoginTimeOperationCompleted(object arg) {
            if ((this.UpdateLastLoginTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLastLoginTimeCompleted(this, new UpdateLastLoginTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InactiveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InactiveUser() {
            object[] results = this.Invoke("InactiveUser", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InactiveUserAsync() {
            this.InactiveUserAsync(null);
        }
        
        /// <remarks/>
        public void InactiveUserAsync(object userState) {
            if ((this.InactiveUserOperationCompleted == null)) {
                this.InactiveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInactiveUserOperationCompleted);
            }
            this.InvokeAsync("InactiveUser", new object[0], this.InactiveUserOperationCompleted, userState);
        }
        
        private void OnInactiveUserOperationCompleted(object arg) {
            if ((this.InactiveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InactiveUserCompleted(this, new InactiveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangePasswordWithoutOldPasswordCompletedEventHandler(object sender, ChangePasswordWithoutOldPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordWithoutOldPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordWithoutOldPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ProfilesConnectedCompletedEventHandler(object sender, ProfilesConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProfilesConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProfilesConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUsersByIdCompletedEventHandler(object sender, getUsersByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUserInfoByEmailCompletedEventHandler(object sender, getUserInfoByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateUsertoactivateCompletedEventHandler(object sender, UpdateUsertoactivateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUsertoactivateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUsertoactivateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void changePaymentStatusCompletedEventHandler(object sender, changePaymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateUserAccountInfoByUserIdCompletedEventHandler(object sender, UpdateUserAccountInfoByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserAccountInfoByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserAccountInfoByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UserCountByMonthCompletedEventHandler(object sender, UserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UserCountByAccTypeMonthCompletedEventHandler(object sender, UserCountByAccTypeMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCountByAccTypeMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCountByAccTypeMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void PaidUserCountByMonthCompletedEventHandler(object sender, PaidUserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaidUserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaidUserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UnPaidUserCountByMonthCompletedEventHandler(object sender, UnPaidUserCountByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnPaidUserCountByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnPaidUserCountByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateForgetPasswordKeyCompletedEventHandler(object sender, UpdateForgetPasswordKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateForgetPasswordKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateForgetPasswordKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateAdminUserCompletedEventHandler(object sender, UpdateAdminUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CheckEmailIdCompletedEventHandler(object sender, CheckEmailIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateResetEmailKeyCompletedEventHandler(object sender, UpdateResetEmailKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateResetEmailKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateResetEmailKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateIsEmailKeyUsedCompletedEventHandler(object sender, UpdateIsEmailKeyUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIsEmailKeyUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIsEmailKeyUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateIsKeyUsedCompletedEventHandler(object sender, UpdateIsKeyUsedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIsKeyUsedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIsKeyUsedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdatePaymentandEwalletStatusByUserIdCompletedEventHandler(object sender, UpdatePaymentandEwalletStatusByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaymentandEwalletStatusByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaymentandEwalletStatusByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateEmailIdCompletedEventHandler(object sender, UpdateEmailIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmailIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmailIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateEwalletAmountCompletedEventHandler(object sender, UpdateEwalletAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEwalletAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEwalletAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserInfoByCodeCompletedEventHandler(object sender, GetUserInfoByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllExpiredUserCompletedEventHandler(object sender, GetAllExpiredUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllExpiredUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllExpiredUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getUserInfoForSocialLoginCompletedEventHandler(object sender, getUserInfoForSocialLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoForSocialLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoForSocialLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RegisterbyTwitterCompletedEventHandler(object sender, RegisterbyTwitterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterbyTwitterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterbyTwitterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CompareDateWithclientlocalCompletedEventHandler(object sender, CompareDateWithclientlocalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareDateWithclientlocalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompareDateWithclientlocalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DifferenceBetweenServerandLocalTimeCompletedEventHandler(object sender, DifferenceBetweenServerandLocalTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DifferenceBetweenServerandLocalTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DifferenceBetweenServerandLocalTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DifferenceBetweenServerandUtcCompletedEventHandler(object sender, DifferenceBetweenServerandUtcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DifferenceBetweenServerandUtcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DifferenceBetweenServerandUtcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateLastLoginTimeCompletedEventHandler(object sender, UpdateLastLoginTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLastLoginTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLastLoginTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void InactiveUserCompletedEventHandler(object sender, InactiveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InactiveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InactiveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591